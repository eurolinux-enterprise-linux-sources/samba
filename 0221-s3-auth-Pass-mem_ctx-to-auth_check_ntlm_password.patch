From b19c9146a28ace1ed003eded4fef5ce632c60a7e Mon Sep 17 00:00:00 2001
From: Andreas Schneider <asn@samba.org>
Date: Tue, 18 Feb 2014 10:19:57 +0100
Subject: [PATCH 221/321] s3-auth: Pass mem_ctx to auth_check_ntlm_password().

Coverity-Id: 1168009
BUG: https://bugzilla.samba.org/show_bug.cgi?id=8598

Signed-off-by: Andreas Schneider <asn@samba.org>

Change-Id: Ie01674561a6a75239a13918d3190c2f21c3efc7a
Reviewed-by: Andrew Bartlett <abartlet@samba.org>

(cherry picked from commit 4d792db03f18aa164b565c7fdc7b446c174fba28)
---
 source3/auth/auth.c                         | 51 ++++++++++++++++++-----------
 source3/auth/auth_compat.c                  | 19 ++++++++---
 source3/auth/auth_ntlmssp.c                 |  6 ++--
 source3/auth/proto.h                        |  3 +-
 source3/auth/user_krb5.c                    |  7 ++--
 source3/include/auth.h                      |  3 +-
 source3/rpc_server/netlogon/srv_netlog_nt.c |  6 ++--
 source3/smbd/sesssetup.c                    | 16 +++++----
 8 files changed, 69 insertions(+), 42 deletions(-)

diff --git a/source3/auth/auth.c b/source3/auth/auth.c
index dbe337faa83..17431b8a637 100644
--- a/source3/auth/auth.c
+++ b/source3/auth/auth.c
@@ -201,19 +201,19 @@ static bool check_domain_match(const char *user, const char *domain)
  * @return An NTSTATUS with NT_STATUS_OK or an appropriate error.
  *
  **/
-
-static NTSTATUS check_ntlm_password(const struct auth_context *auth_context,
-				    const struct auth_usersupplied_info *user_info, 
-				    struct auth_serversupplied_info **server_info)
+static NTSTATUS check_ntlm_password(TALLOC_CTX *mem_ctx,
+				    const struct auth_context *auth_context,
+				    const struct auth_usersupplied_info *user_info,
+				    struct auth_serversupplied_info **pserver_info)
 {
 	/* if all the modules say 'not for me' this is reasonable */
 	NTSTATUS nt_status = NT_STATUS_NO_SUCH_USER;
 	const char *unix_username;
 	auth_methods *auth_method;
-	TALLOC_CTX *mem_ctx;
 
-	if (!user_info || !auth_context || !server_info)
+	if (user_info == NULL || auth_context == NULL || pserver_info == NULL) {
 		return NT_STATUS_LOGON_FAILURE;
+	}
 
 	DEBUG(3, ("check_ntlm_password:  Checking password for unmapped user [%s]\\[%s]@[%s] with the new password interface\n", 
 		  user_info->client.domain_name, user_info->client.account_name, user_info->workstation_name));
@@ -247,17 +247,27 @@ static NTSTATUS check_ntlm_password(const struct auth_context *auth_context,
 		return NT_STATUS_LOGON_FAILURE;
 
 	for (auth_method = auth_context->auth_method_list;auth_method; auth_method = auth_method->next) {
+		struct auth_serversupplied_info *server_info;
+		TALLOC_CTX *tmp_ctx;
 		NTSTATUS result;
 
-		mem_ctx = talloc_init("%s authentication for user %s\\%s", auth_method->name,
-				      user_info->mapped.domain_name, user_info->client.account_name);
+		tmp_ctx = talloc_named(mem_ctx,
+				       0,
+				       "%s authentication for user %s\\%s",
+				       auth_method->name,
+				       user_info->mapped.domain_name,
+				       user_info->client.account_name);
 
-		result = auth_method->auth(auth_context, auth_method->private_data, mem_ctx, user_info, server_info);
+		result = auth_method->auth(auth_context,
+					   auth_method->private_data,
+					   tmp_ctx,
+					   user_info,
+					   &server_info);
 
 		/* check if the module did anything */
 		if ( NT_STATUS_V(result) == NT_STATUS_V(NT_STATUS_NOT_IMPLEMENTED) ) {
 			DEBUG(10,("check_ntlm_password: %s had nothing to say\n", auth_method->name));
-			talloc_destroy(mem_ctx);
+			TALLOC_FREE(tmp_ctx);
 			continue;
 		}
 
@@ -271,19 +281,20 @@ static NTSTATUS check_ntlm_password(const struct auth_context *auth_context,
 				  auth_method->name, user_info->client.account_name, nt_errstr(nt_status)));
 		}
 
-		talloc_destroy(mem_ctx);
-
-		if ( NT_STATUS_IS_OK(nt_status))
-		{
-				break;			
+		if (NT_STATUS_IS_OK(nt_status)) {
+			*pserver_info = talloc_steal(mem_ctx, server_info);
+			TALLOC_FREE(tmp_ctx);
+			break;
 		}
+
+		TALLOC_FREE(tmp_ctx);
 	}
 
 	/* successful authentication */
 
 	if (NT_STATUS_IS_OK(nt_status)) {
-		unix_username = (*server_info)->unix_name;
-		if (!(*server_info)->guest) {
+		unix_username = (*pserver_info)->unix_name;
+		if (!(*pserver_info)->guest) {
 			/* We might not be root if we are an RPC call */
 			become_root();
 			nt_status = smb_pam_accountcheck(
@@ -301,9 +312,9 @@ static NTSTATUS check_ntlm_password(const struct auth_context *auth_context,
 		}
 
 		if (NT_STATUS_IS_OK(nt_status)) {
-			DEBUG((*server_info)->guest ? 5 : 2, 
+			DEBUG((*pserver_info)->guest ? 5 : 2,
 			      ("check_ntlm_password:  %sauthentication for user [%s] -> [%s] -> [%s] succeeded\n",
-			       (*server_info)->guest ? "guest " : "",
+			       (*pserver_info)->guest ? "guest " : "",
 			       user_info->client.account_name,
 			       user_info->mapped.account_name,
 			       unix_username));
@@ -317,7 +328,7 @@ static NTSTATUS check_ntlm_password(const struct auth_context *auth_context,
 	DEBUG(2, ("check_ntlm_password:  Authentication for user [%s] -> [%s] FAILED with error %s\n",
 		  user_info->client.account_name, user_info->mapped.account_name,
 		  nt_errstr(nt_status)));
-	ZERO_STRUCTP(server_info);
+	ZERO_STRUCTP(pserver_info);
 
 	return nt_status;
 }
diff --git a/source3/auth/auth_compat.c b/source3/auth/auth_compat.c
index 0ae712a5175..d51c96fa3a8 100644
--- a/source3/auth/auth_compat.c
+++ b/source3/auth/auth_compat.c
@@ -35,7 +35,8 @@ check if a username/password is OK assuming the password is in plaintext
 return True if the password is correct, False otherwise
 ****************************************************************************/
 
-NTSTATUS check_plaintext_password(const char *smb_name,
+NTSTATUS check_plaintext_password(TALLOC_CTX *mem_ctx,
+				  const char *smb_name,
 				  DATA_BLOB plaintext_blob,
 				  struct auth_serversupplied_info **server_info)
 {
@@ -59,8 +60,10 @@ NTSTATUS check_plaintext_password(const char *smb_name,
 		return NT_STATUS_NO_MEMORY;
 	}
 
-	nt_status = plaintext_auth_context->check_ntlm_password(plaintext_auth_context, 
-								user_info, server_info); 
+	nt_status = plaintext_auth_context->check_ntlm_password(mem_ctx,
+								plaintext_auth_context,
+								user_info,
+								server_info);
 
 	TALLOC_FREE(plaintext_auth_context);
 	free_user_info(&user_info);
@@ -84,7 +87,10 @@ static NTSTATUS pass_check_smb(struct auth_context *actx,
 				     domain,
 				     lm_pwd,
 				     nt_pwd);
-	nt_status = actx->check_ntlm_password(actx, user_info, &server_info);
+	nt_status = actx->check_ntlm_password(talloc_tos(),
+					      actx,
+					      user_info,
+					      &server_info);
 	free_user_info(&user_info);
 	TALLOC_FREE(server_info);
 	return nt_status;
@@ -127,7 +133,10 @@ bool password_ok(struct auth_context *actx, bool global_encrypted,
 		}
 	} else {
 		struct auth_serversupplied_info *server_info = NULL;
-		NTSTATUS nt_status = check_plaintext_password(smb_name, password_blob, &server_info);
+		NTSTATUS nt_status = check_plaintext_password(talloc_tos(),
+							      smb_name,
+							      password_blob,
+							      &server_info);
 		TALLOC_FREE(server_info);
 		if (NT_STATUS_IS_OK(nt_status)) {
 			return True;
diff --git a/source3/auth/auth_ntlmssp.c b/source3/auth/auth_ntlmssp.c
index ae29c305703..097501cac9d 100644
--- a/source3/auth/auth_ntlmssp.c
+++ b/source3/auth/auth_ntlmssp.c
@@ -143,8 +143,10 @@ static NTSTATUS auth_ntlmssp_check_password(struct ntlmssp_state *ntlmssp_state,
 
 	user_info->logon_parameters = MSV1_0_ALLOW_SERVER_TRUST_ACCOUNT | MSV1_0_ALLOW_WORKSTATION_TRUST_ACCOUNT;
 
-	nt_status = auth_ntlmssp_state->auth_context->check_ntlm_password(auth_ntlmssp_state->auth_context, 
-									  user_info, &auth_ntlmssp_state->server_info); 
+	nt_status = auth_ntlmssp_state->auth_context->check_ntlm_password(mem_ctx,
+									  auth_ntlmssp_state->auth_context,
+									  user_info,
+									  &auth_ntlmssp_state->server_info);
 
 	username_was_mapped = user_info->was_mapped;
 
diff --git a/source3/auth/proto.h b/source3/auth/proto.h
index e6830aa4209..fccabc44c5a 100644
--- a/source3/auth/proto.h
+++ b/source3/auth/proto.h
@@ -50,7 +50,8 @@ NTSTATUS auth_builtin_init(void);
 
 /* The following definitions come from auth/auth_compat.c  */
 
-NTSTATUS check_plaintext_password(const char *smb_name,
+NTSTATUS check_plaintext_password(TALLOC_CTX *mem_ctx,
+				  const char *smb_name,
 				  DATA_BLOB plaintext_password,
 				  struct auth_serversupplied_info **server_info);
 bool password_ok(struct auth_context *actx, bool global_encrypted,
diff --git a/source3/auth/user_krb5.c b/source3/auth/user_krb5.c
index 1441f88ddd4..1e5254e9af1 100644
--- a/source3/auth/user_krb5.c
+++ b/source3/auth/user_krb5.c
@@ -230,7 +230,7 @@ NTSTATUS make_server_info_krb5(TALLOC_CTX *mem_ctx,
 				   "make_server_info_sam\n", username));
 			status = make_server_info_sam(mem_ctx,
 						      sampass,
-						      &server_info);
+						      server_info);
 		} else {
 			/*
 			 * User not in passdb, make it up artificially
@@ -240,7 +240,7 @@ NTSTATUS make_server_info_krb5(TALLOC_CTX *mem_ctx,
 			status = make_server_info_pw(mem_ctx,
 						     username,
 						     pw,
-						     &server_info);
+						     server_info);
 		}
 		TALLOC_FREE(sampass);
 
@@ -250,9 +250,6 @@ NTSTATUS make_server_info_krb5(TALLOC_CTX *mem_ctx,
 			return status;
                 }
 
-		/* Steal tmp server info into the server_info pointer. */
-		*server_info = talloc_move(mem_ctx, &tmp);
-
 		/* make_server_info_pw does not set the domain. Without this
 		 * we end up with the local netbios name in substitutions for
 		 * %D. */
diff --git a/source3/include/auth.h b/source3/include/auth.h
index c017da98db0..b0ac11a691f 100644
--- a/source3/include/auth.h
+++ b/source3/include/auth.h
@@ -89,7 +89,8 @@ struct auth_context {
 
 	NTSTATUS (*get_ntlm_challenge)(struct auth_context *auth_context,
 				       uint8_t chal[8]);
-	NTSTATUS (*check_ntlm_password)(const struct auth_context *auth_context,
+	NTSTATUS (*check_ntlm_password)(TALLOC_CTX *mem_ctx,
+					const struct auth_context *auth_context,
 					const struct auth_usersupplied_info *user_info, 
 					struct auth_serversupplied_info **server_info);
 	NTSTATUS (*nt_status_squash)(NTSTATUS nt_status);
diff --git a/source3/rpc_server/netlogon/srv_netlog_nt.c b/source3/rpc_server/netlogon/srv_netlog_nt.c
index a630b47766b..8079b3aa9ae 100644
--- a/source3/rpc_server/netlogon/srv_netlog_nt.c
+++ b/source3/rpc_server/netlogon/srv_netlog_nt.c
@@ -1581,8 +1581,10 @@ static NTSTATUS _netr_LogonSamLogon_base(struct pipes_struct *p,
 	} /* end switch */
 
 	if ( NT_STATUS_IS_OK(status) ) {
-		status = auth_context->check_ntlm_password(auth_context,
-			user_info, &server_info);
+		status = auth_context->check_ntlm_password(p->mem_ctx,
+							   auth_context,
+							   user_info,
+							   &server_info);
 	}
 
 	TALLOC_FREE(auth_context);
diff --git a/source3/smbd/sesssetup.c b/source3/smbd/sesssetup.c
index f27cfb51b0b..80df2978709 100644
--- a/source3/smbd/sesssetup.c
+++ b/source3/smbd/sesssetup.c
@@ -140,7 +140,8 @@ static void reply_sesssetup_blob(struct smb_request *req,
  Do a 'guest' logon, getting back the
 ****************************************************************************/
 
-static NTSTATUS check_guest_password(struct auth_serversupplied_info **server_info)
+static NTSTATUS check_guest_password(TALLOC_CTX *mem_ctx,
+				     struct auth_serversupplied_info **server_info)
 {
 	struct auth_context *auth_context;
 	struct auth_usersupplied_info *user_info = NULL;
@@ -150,7 +151,7 @@ static NTSTATUS check_guest_password(struct auth_serversupplied_info **server_in
 
 	DEBUG(3,("Got anonymous request\n"));
 
-	nt_status = make_auth_context_fixed(talloc_tos(), &auth_context, chal);
+	nt_status = make_auth_context_fixed(mem_ctx, &auth_context, chal);
 	if (!NT_STATUS_IS_OK(nt_status)) {
 		return nt_status;
 	}
@@ -160,9 +161,10 @@ static NTSTATUS check_guest_password(struct auth_serversupplied_info **server_in
 		return NT_STATUS_NO_MEMORY;
 	}
 
-	nt_status = auth_context->check_ntlm_password(auth_context,
-						user_info,
-						server_info);
+	nt_status = auth_context->check_ntlm_password(mem_ctx,
+						      auth_context,
+						      user_info,
+						      server_info);
 	TALLOC_FREE(auth_context);
 	free_user_info(&user_info);
 	return nt_status;
@@ -1627,7 +1629,7 @@ void reply_sesssetup_and_X(struct smb_request *req)
 
 	if (!*user) {
 
-		nt_status = check_guest_password(&server_info);
+		nt_status = check_guest_password(talloc_tos(), &server_info);
 
 	} else if (doencrypt) {
 		struct auth_context *negprot_auth_context = NULL;
@@ -1645,6 +1647,7 @@ void reply_sesssetup_and_X(struct smb_request *req)
 						lm_resp, nt_resp);
 		if (NT_STATUS_IS_OK(nt_status)) {
 			nt_status = negprot_auth_context->check_ntlm_password(
+					talloc_tos(),
 					negprot_auth_context,
 					user_info,
 					&server_info);
@@ -1669,6 +1672,7 @@ void reply_sesssetup_and_X(struct smb_request *req)
 
 			if (NT_STATUS_IS_OK(nt_status)) {
 				nt_status = plaintext_auth_context->check_ntlm_password(
+						talloc_tos(),
 						plaintext_auth_context,
 						user_info,
 						&server_info);
-- 
2.14.3

